{"version":3,"file":"background/background.bundle.js","mappings":"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","sources":["webpack://media-downloader/./src/storage/storage-def.ts","webpack://media-downloader/./src/utils/chrome-api.ts","webpack://media-downloader/./src/types/message-event-name.enum.ts","webpack://media-downloader/./src/storage/storage-fn.ts","webpack://media-downloader/./src/background/background.ts"],"sourcesContent":["export var ThemeType;\n(function (ThemeType) {\n    ThemeType[\"LIGHT\"] = \"light\";\n    ThemeType[\"DARK\"] = \"dark\";\n    ThemeType[\"SYSTEM\"] = \"system\";\n})(ThemeType || (ThemeType = {}));\nexport var DefaultActionType;\n(function (DefaultActionType) {\n    DefaultActionType[\"POPUP\"] = \"popup\";\n    DefaultActionType[\"SIDE_PANEL\"] = \"side-panel\";\n})(DefaultActionType || (DefaultActionType = {}));\nexport const DEFAULT_SETTINGS = {\n    theme: ThemeType.SYSTEM,\n    defaultAction: DefaultActionType.POPUP,\n    previousVersion: null,\n    showChangelogLink: false,\n};\nexport const DEFAULT_SETTINGS_KEYS = Object.keys(DEFAULT_SETTINGS);\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport function executeContentScript(scriptUrl) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const tab = yield getCurrentTab();\n        if (!tab || !tab.id) {\n            return;\n        }\n        if (tab.id <= 0) {\n            return;\n        }\n        yield chrome.scripting.executeScript({\n            target: { tabId: tab.id, allFrames: true },\n            files: [scriptUrl],\n        });\n    });\n}\nexport function getCurrentTab() {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        try {\n            let queryOptions = { active: true, lastFocusedWindow: true };\n            let [tab] = yield chrome.tabs.query(queryOptions);\n            console.log('current tabUrl: ', tab === null || tab === void 0 ? void 0 : tab.url, tab);\n            if (!(tab === null || tab === void 0 ? void 0 : tab.url) || ((_a = tab === null || tab === void 0 ? void 0 : tab.url) === null || _a === void 0 ? void 0 : _a.startsWith('chrome://')) || ((_b = tab === null || tab === void 0 ? void 0 : tab.url) === null || _b === void 0 ? void 0 : _b.startsWith('https://chromewebstore.google.com'))) {\n                return null;\n            }\n            return tab;\n        }\n        catch (_c) {\n            return null;\n        }\n    });\n}\nexport function getTab(tabId) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        try {\n            const tab = yield chrome.tabs.get(tabId);\n            if (chrome.runtime.lastError) {\n                console.error('Error get tab by ID:', chrome.runtime.lastError);\n                return null;\n            }\n            console.log('tabUrl: ', tab === null || tab === void 0 ? void 0 : tab.url);\n            if (!(tab === null || tab === void 0 ? void 0 : tab.url) || ((_a = tab === null || tab === void 0 ? void 0 : tab.url) === null || _a === void 0 ? void 0 : _a.startsWith('chrome://')) || ((_b = tab === null || tab === void 0 ? void 0 : tab.url) === null || _b === void 0 ? void 0 : _b.startsWith('https://chromewebstore.google.com'))) {\n                return null;\n            }\n            return tab;\n        }\n        catch (_c) {\n            return null;\n        }\n    });\n}\nexport function downloadUrl(url, filename = null) {\n    const downloadOptions = { url };\n    if (filename) {\n        downloadOptions.filename = filename;\n    }\n    chrome.downloads.download(downloadOptions);\n}\nexport function getStorageValue(obj, callback) {\n    chrome.storage.sync.get(obj, callback);\n}\nexport function setStorageValue(obj, callback) {\n    if (callback) {\n        chrome.storage.sync.set(obj, callback);\n    }\n    else {\n        chrome.storage.sync.set(obj);\n    }\n}\nexport function sendMessage(eventName, data) {\n    try {\n        chrome.runtime.sendMessage({ eventName, data }, (response) => {\n        });\n    }\n    catch (_a) {\n        // do nothing\n    }\n}\nexport function onMessage(callback) {\n    chrome.runtime.onMessage.addListener(callback);\n}\nexport function createTab(details) {\n    chrome.tabs.create(details);\n}\nexport function setPopupOptions(options) {\n    chrome.action.setPopup(options);\n}\nexport function setSidePanelOptions(options) {\n    chrome.sidePanel.setOptions(options);\n}\nexport function setSidePanelBehavior(options) {\n    chrome.sidePanel.setPanelBehavior(options).catch((error) => console.log(error));\n}\nexport function contextMenuClicked(callback) {\n    chrome.contextMenus.onClicked.addListener((info, tab) => {\n        if (!tab) {\n            return;\n        }\n        callback(info, tab);\n    });\n}\nexport function onInstalled(callback) {\n    chrome.runtime.onInstalled.addListener(callback);\n}\nexport function createContextMenu(properties) {\n    chrome.contextMenus.create(properties);\n}\nexport function onCreateTab(callback) {\n    chrome.tabs.onCreated.addListener(callback);\n}\nexport function onReplaceTab(callback) {\n    chrome.tabs.onReplaced.addListener(callback);\n}\nexport function onActivateTab(callback) {\n    chrome.tabs.onActivated.addListener(callback);\n}\nexport function onUpdateTab(callback) {\n    chrome.tabs.onUpdated.addListener(callback);\n}\nexport function onClickExtensionIcon(callback) {\n    chrome.action.onClicked.addListener(callback);\n}\nexport function openPopup(options) {\n    chrome.action.openPopup(options);\n}\nexport function openSidePanel(options) {\n    chrome.sidePanel.open(options);\n}\nexport function getVersion() {\n    return chrome.runtime.getManifest().version;\n}\n","export var MessageEventNameEnum;\n(function (MessageEventNameEnum) {\n    MessageEventNameEnum[\"TAB_CREATED\"] = \"tabCreated\";\n    MessageEventNameEnum[\"TAB_REPLACED\"] = \"tabReplaced\";\n    MessageEventNameEnum[\"TAB_UPDATED\"] = \"tabUpdated\";\n    MessageEventNameEnum[\"TAB_ACTIVATED\"] = \"tabActivated\";\n    MessageEventNameEnum[\"SEND_MEDIA\"] = \"sendMedia\";\n})(MessageEventNameEnum || (MessageEventNameEnum = {}));\n","import { getStorageValue } from '../utils/chrome-api';\nimport { DefaultActionType, ThemeType } from './storage-def';\nexport function getStorageDefaultActionValue(callback) {\n    getStorageValue({ defaultAction: DefaultActionType.POPUP }, ({ defaultAction }) => {\n        if (!defaultAction) {\n            defaultAction = DefaultActionType.POPUP;\n        }\n        callback(defaultAction);\n    });\n}\nexport function getStorageThemeValue(callback) {\n    getStorageValue({ theme: ThemeType.SYSTEM }, ({ theme }) => {\n        if (!theme) {\n            theme = ThemeType.SYSTEM;\n        }\n        callback(theme);\n    });\n}\nexport function getStoragePreviousVersionValue(callback) {\n    getStorageValue({ previousVersion: null }, ({ previousVersion }) => {\n        if (!previousVersion) {\n            previousVersion = null;\n        }\n        callback(previousVersion);\n    });\n}\n","import { DefaultActionType } from '../storage/storage-def';\nimport { getStorageDefaultActionValue, getStoragePreviousVersionValue } from '../storage/storage-fn';\nimport { MessageEventNameEnum } from '../types/message-event-name.enum';\nimport { contextMenuClicked, createContextMenu, getVersion, onActivateTab, onClickExtensionIcon, onCreateTab, onInstalled, onReplaceTab, onUpdateTab, openPopup, openSidePanel, sendMessage, setPopupOptions, setSidePanelBehavior, setSidePanelOptions, setStorageValue, } from '../utils/chrome-api';\nfunction handleUpdate(details) {\n    if (details.reason !== 'update') {\n        return;\n    }\n    const currentVersion = getVersion();\n    getStoragePreviousVersionValue((previousVersion) => {\n        if (previousVersion !== currentVersion) {\n            setStorageValue({ showChangelogLink: true });\n        }\n        setStorageValue({ previousVersion: currentVersion });\n    });\n}\nfunction openDownloader(tab) {\n    getStorageDefaultActionValue((defaultAction) => {\n        switch (defaultAction) {\n            case DefaultActionType.POPUP:\n                openPopup();\n                break;\n            case DefaultActionType.SIDE_PANEL:\n                openSidePanel({ windowId: tab.windowId });\n                break;\n        }\n    });\n}\nfunction updateSidePanelAndPopupBehavior() {\n    const downloaderPath = '/views/downloader.html';\n    getStorageDefaultActionValue((defaultAction) => {\n        const isSidePanel = defaultAction === DefaultActionType.SIDE_PANEL;\n        const isPopup = defaultAction === DefaultActionType.POPUP;\n        const downloaderPathForPopup = isPopup\n            ? downloaderPath\n            : '';\n        const downloaderPathForSidePanel = isSidePanel\n            ? downloaderPath\n            : '';\n        setSidePanelBehavior({ openPanelOnActionClick: isSidePanel });\n        setSidePanelOptions({ path: downloaderPathForSidePanel });\n        setPopupOptions({ popup: downloaderPathForPopup });\n    });\n}\nonUpdateTab((tabId, changeInfo, tab) => {\n    updateSidePanelAndPopupBehavior();\n    sendMessage(MessageEventNameEnum.TAB_UPDATED, { tabId, changeInfo, tab });\n});\nonActivateTab((activeInfo) => {\n    updateSidePanelAndPopupBehavior();\n    sendMessage(MessageEventNameEnum.TAB_ACTIVATED, { tabId: activeInfo.tabId });\n});\nonReplaceTab((addedTabId) => {\n    updateSidePanelAndPopupBehavior();\n    sendMessage(MessageEventNameEnum.TAB_REPLACED, { tabId: addedTabId });\n});\nonCreateTab((tab) => {\n    updateSidePanelAndPopupBehavior();\n    sendMessage(MessageEventNameEnum.TAB_CREATED, { tab });\n});\nonClickExtensionIcon((tab) => {\n    updateSidePanelAndPopupBehavior();\n    openDownloader(tab);\n});\nonInstalled(details => {\n    updateSidePanelAndPopupBehavior();\n    createContextMenu({\n        id: 'openMediaDownloader',\n        title: 'Open Media Downloader',\n        contexts: ['page'],\n    });\n    handleUpdate(details);\n});\ncontextMenuClicked((info, tab) => {\n    if (info.menuItemId === 'openMediaDownloader') {\n        openDownloader(tab);\n    }\n});\n"],"names":["DefaultActionType","ThemeType","DEFAULT_SETTINGS","theme","SYSTEM","defaultAction","POPUP","previousVersion","showChangelogLink","MessageEventNameEnum","callback","obj","chrome","storage","sync","get","setStorageValue","set","sendMessage","eventName","data","runtime","response","_a","getStorageDefaultActionValue","openDownloader","tab","action","openPopup","options","SIDE_PANEL","sidePanel","open","openSidePanel","windowId","updateSidePanelAndPopupBehavior","downloaderPath","isSidePanel","downloaderPathForPopup","downloaderPathForSidePanel","openPanelOnActionClick","setPanelBehavior","catch","error","console","log","setOptions","setSidePanelOptions","path","setPopup","setPopupOptions","popup","Object","keys","tabId","changeInfo","TAB_UPDATED","tabs","onUpdated","addListener","onActivated","activeInfo","TAB_ACTIVATED","onReplaced","addedTabId","TAB_REPLACED","onCreated","TAB_CREATED","onClicked","onInstalled","details","properties","id","title","contexts","contextMenus","create","reason","currentVersion","getManifest","version","handleUpdate","info","menuItemId"],"sourceRoot":""}