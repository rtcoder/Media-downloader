{"version":3,"file":"theme.bundle.js","mappings":"mBAAO,IAAIA,EAMA,EACAC,GANX,SAAWD,GACPA,EAAiB,MAAI,QACrBA,EAAgB,KAAI,OACpBA,EAAkB,OAAI,QACzB,CAJD,CAIGA,IAAcA,EAAY,CAAC,KAEnBC,EAGR,IAAsB,EAAoB,CAAC,IAFjB,MAAI,QAC7BA,EAA8B,WAAI,aAE/B,MAAMC,EAAmB,CAC5BC,MAAOH,EAAUI,OACjBC,cAAe,EAAkBC,MACjCC,gBAAiB,KACjBC,mBAAmB,GCfvB,ICUqCC,EFOAC,OAAOC,KAAKT,GEPZO,ECFrC,SAAoBN,GAEhB,GADAS,SAASC,KAAKC,UAAUC,OAAO,cAAe,cAC1CZ,IAAUH,EAAUgB,MACpBJ,SAASC,KAAKC,UAAUG,IAAI,oBAE3B,GAAId,IAAUH,EAAUkB,KACzBN,SAASC,KAAKC,UAAUG,IAAI,mBAE3B,GAAId,IAAUH,EAAUI,OAAQ,CACjC,MAAMe,EAZSC,OAAOC,WAAW,gCAAgCC,QACjDtB,EAAUkB,KAAOlB,EAAUgB,MAY3CJ,SAASC,KAAKC,UAAUG,IAAI,GAAGE,UACnC,CACJ,EFgDO,SAAyBI,EAAKd,GACjCe,OAAOC,QAAQC,KAAKC,IAAIJ,EAAKd,EACjC,CC3DI,CAAgB,CAAEN,MAAOH,EAAUI,SAAU,EAAGD,YACvCA,IACDA,EAAQH,EAAUI,QAEtBK,EAASN,EAAM,G","sources":["webpack://media-downloader/./src/storage/storage-def.ts","webpack://media-downloader/./src/utils/chrome-api.ts","webpack://media-downloader/./src/storage/storage-fn.ts","webpack://media-downloader/./src/theme.ts"],"sourcesContent":["export var ThemeType;\n(function (ThemeType) {\n    ThemeType[\"LIGHT\"] = \"light\";\n    ThemeType[\"DARK\"] = \"dark\";\n    ThemeType[\"SYSTEM\"] = \"system\";\n})(ThemeType || (ThemeType = {}));\nexport var DefaultActionType;\n(function (DefaultActionType) {\n    DefaultActionType[\"POPUP\"] = \"popup\";\n    DefaultActionType[\"SIDE_PANEL\"] = \"side-panel\";\n})(DefaultActionType || (DefaultActionType = {}));\nexport const DEFAULT_SETTINGS = {\n    theme: ThemeType.SYSTEM,\n    defaultAction: DefaultActionType.POPUP,\n    previousVersion: null,\n    showChangelogLink: false,\n};\nexport const DEFAULT_SETTINGS_KEYS = Object.keys(DEFAULT_SETTINGS);\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport function executeContentScript(scriptUrl) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const tab = yield getCurrentTab();\n        if (!tab || !tab.id) {\n            return;\n        }\n        if (tab.id <= 0) {\n            return;\n        }\n        yield chrome.scripting.executeScript({\n            target: { tabId: tab.id, allFrames: true },\n            files: [scriptUrl],\n        });\n    });\n}\nexport function getCurrentTab() {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        try {\n            let queryOptions = { active: true, lastFocusedWindow: true };\n            let [tab] = yield chrome.tabs.query(queryOptions);\n            console.log('current tabUrl: ', tab === null || tab === void 0 ? void 0 : tab.url, tab);\n            if (!(tab === null || tab === void 0 ? void 0 : tab.url) || ((_a = tab === null || tab === void 0 ? void 0 : tab.url) === null || _a === void 0 ? void 0 : _a.startsWith('chrome://')) || ((_b = tab === null || tab === void 0 ? void 0 : tab.url) === null || _b === void 0 ? void 0 : _b.startsWith('https://chromewebstore.google.com'))) {\n                return null;\n            }\n            return tab;\n        }\n        catch (_c) {\n            return null;\n        }\n    });\n}\nexport function getTab(tabId) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        try {\n            const tab = yield chrome.tabs.get(tabId);\n            if (chrome.runtime.lastError) {\n                console.error('Error get tab by ID:', chrome.runtime.lastError);\n                return null;\n            }\n            console.log('tabUrl: ', tab === null || tab === void 0 ? void 0 : tab.url);\n            if (!(tab === null || tab === void 0 ? void 0 : tab.url) || ((_a = tab === null || tab === void 0 ? void 0 : tab.url) === null || _a === void 0 ? void 0 : _a.startsWith('chrome://')) || ((_b = tab === null || tab === void 0 ? void 0 : tab.url) === null || _b === void 0 ? void 0 : _b.startsWith('https://chromewebstore.google.com'))) {\n                return null;\n            }\n            return tab;\n        }\n        catch (_c) {\n            return null;\n        }\n    });\n}\nexport function downloadUrl(url, filename = null) {\n    const downloadOptions = { url };\n    if (filename) {\n        downloadOptions.filename = filename;\n    }\n    chrome.downloads.download(downloadOptions);\n}\nexport function getStorageValue(obj, callback) {\n    chrome.storage.sync.get(obj, callback);\n}\nexport function setStorageValue(obj, callback) {\n    if (callback) {\n        chrome.storage.sync.set(obj, callback);\n    }\n    else {\n        chrome.storage.sync.set(obj);\n    }\n}\nexport function sendMessage(eventName, data) {\n    try {\n        chrome.runtime.sendMessage({ eventName, data }, (response) => {\n        });\n    }\n    catch (_a) {\n        // do nothing\n    }\n}\nexport function onMessage(callback) {\n    chrome.runtime.onMessage.addListener(callback);\n}\nexport function createTab(details) {\n    chrome.tabs.create(details);\n}\nexport function setPopupOptions(options) {\n    chrome.action.setPopup(options);\n}\nexport function setSidePanelOptions(options) {\n    chrome.sidePanel.setOptions(options);\n}\nexport function setSidePanelBehavior(options) {\n    chrome.sidePanel.setPanelBehavior(options).catch((error) => console.log(error));\n}\nexport function contextMenuClicked(callback) {\n    chrome.contextMenus.onClicked.addListener((info, tab) => {\n        if (!tab) {\n            return;\n        }\n        callback(info, tab);\n    });\n}\nexport function onInstalled(callback) {\n    chrome.runtime.onInstalled.addListener(callback);\n}\nexport function createContextMenu(properties) {\n    chrome.contextMenus.create(properties);\n}\nexport function onCreateTab(callback) {\n    chrome.tabs.onCreated.addListener(callback);\n}\nexport function onReplaceTab(callback) {\n    chrome.tabs.onReplaced.addListener(callback);\n}\nexport function onActivateTab(callback) {\n    chrome.tabs.onActivated.addListener(callback);\n}\nexport function onUpdateTab(callback) {\n    chrome.tabs.onUpdated.addListener(callback);\n}\nexport function onClickExtensionIcon(callback) {\n    chrome.action.onClicked.addListener(callback);\n}\nexport function openPopup(options) {\n    chrome.action.openPopup(options);\n}\nexport function openSidePanel(options) {\n    chrome.sidePanel.open(options);\n}\nexport function getVersion() {\n    return chrome.runtime.getManifest().version;\n}\n","import { getStorageValue } from '../utils/chrome-api';\nimport { DefaultActionType, ThemeType } from './storage-def';\nexport function getStorageDefaultActionValue(callback) {\n    getStorageValue({ defaultAction: DefaultActionType.POPUP }, ({ defaultAction }) => {\n        if (!defaultAction) {\n            defaultAction = DefaultActionType.POPUP;\n        }\n        callback(defaultAction);\n    });\n}\nexport function getStorageThemeValue(callback) {\n    getStorageValue({ theme: ThemeType.SYSTEM }, ({ theme }) => {\n        if (!theme) {\n            theme = ThemeType.SYSTEM;\n        }\n        callback(theme);\n    });\n}\nexport function getStoragePreviousVersionValue(callback) {\n    getStorageValue({ previousVersion: null }, ({ previousVersion }) => {\n        if (!previousVersion) {\n            previousVersion = null;\n        }\n        callback(previousVersion);\n    });\n}\n","// Apply the saved theme or system theme when the extension loads\nimport { ThemeType } from './storage/storage-def';\nimport { getStorageThemeValue } from './storage/storage-fn';\ngetStorageThemeValue(applyTheme);\nfunction getBrowserTheme() {\n    const isDarkMode = window.matchMedia('(prefers-color-scheme: dark)').matches;\n    return isDarkMode ? ThemeType.DARK : ThemeType.LIGHT;\n}\nfunction applyTheme(theme) {\n    document.body.classList.remove('light-theme', 'dark-theme');\n    if (theme === ThemeType.LIGHT) {\n        document.body.classList.add('light-theme');\n    }\n    else if (theme === ThemeType.DARK) {\n        document.body.classList.add('dark-theme');\n    }\n    else if (theme === ThemeType.SYSTEM) {\n        const systemTheme = getBrowserTheme();\n        document.body.classList.add(`${systemTheme}-theme`);\n    }\n}\n"],"names":["ThemeType","DefaultActionType","DEFAULT_SETTINGS","theme","SYSTEM","defaultAction","POPUP","previousVersion","showChangelogLink","callback","Object","keys","document","body","classList","remove","LIGHT","add","DARK","systemTheme","window","matchMedia","matches","obj","chrome","storage","sync","get"],"sourceRoot":""}