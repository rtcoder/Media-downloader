{"version":3,"file":"theme.bundle.js","mappings":"mBAAO,IAAI,ECCAA,EAMA,EACAC,EDPAC,KAIR,IAAiB,EAAe,CAAC,IAHZ,MAAI,QACxBA,EAAoB,MAAI,QACxBA,EAAoB,MAAI,QCF5B,SAAWF,GACPA,EAAiB,MAAI,QACrBA,EAAgB,KAAI,OACpBA,EAAkB,OAAI,QACzB,CAJD,CAIGA,IAAcA,EAAY,CAAC,KAEnBC,EAGR,IAAsB,EAAoB,CAAC,IAFjB,MAAI,QAC7BA,EAA8B,WAAI,aAE/B,MAAM,EAAmB,CAC5BE,MAAOH,EAAUI,OACjBC,cAAe,EAAkBC,MACjCC,gBAAiB,KACjBC,mBAAmB,EACnBC,gBAAiB,EAAaC,MAC9BC,QAAS,CAAC,EACVC,aAAa,GCnBjB,ICAWC,ECW0BC,ECIrC,SAASC,EAAWZ,GAEhB,GADAa,SAASC,KAAKC,UAAUC,OAAO,cAAe,cAC1ChB,IAAUH,EAAUoB,MACpBJ,SAASC,KAAKC,UAAUG,IAAI,oBAE3B,GAAIlB,IAAUH,EAAUsB,KACzBN,SAASC,KAAKC,UAAUG,IAAI,mBAE3B,GAAIlB,IAAUH,EAAUI,OAAQ,CACjC,MAAMmB,EAZSC,OAAOC,WAAW,gCAAgCC,QACjD1B,EAAUsB,KAAOtB,EAAUoB,MAY3CJ,SAASC,KAAKC,UAAUG,IAAI,GAAGE,UACnC,CACJ,CJNqCI,OAAOC,KAAK,GEpBjD,SAAWf,GACPA,EAAkC,YAAI,aACtCA,EAAmC,aAAI,cACvCA,EAAkC,YAAI,aACtCA,EAAoC,cAAI,eACxCA,EAAiC,WAAI,YACrCA,EAAoD,8BAAI,4BACxDA,EAAmC,aAAI,aACvCA,EAAoC,cAAI,cAC3C,CATD,CASGA,IAAyBA,EAAuB,CAAC,ICCfC,ECNhBC,EHgEd,SAAyBc,EAAKf,GACjCgB,OAAOC,QAAQC,KAAKC,IAAIJ,EAAKf,EACjC,CE3DI,CAAgB,CAAEX,MAAOH,EAAUI,SAAU,EAAGD,YACvCA,IACDA,EAAQ,EAAiBA,OAE7BW,EAASX,EAAM,IF6EnB2B,OAAOI,QAAQC,UAAUC,aGvFlBC,IACHA,EAAIC,YAAczB,EAAqB0B,eACvCxB,EAAWsB,EAAIG,KAAKrC,MACxB,G","sources":["webpack://media-downloader/./src/types/media-in-tabs.type.ts","webpack://media-downloader/./src/storage/storage-def.ts","webpack://media-downloader/./src/utils/chrome-api.ts","webpack://media-downloader/./src/types/message-event-name.enum.ts","webpack://media-downloader/./src/storage/storage-fn.ts","webpack://media-downloader/./src/theme.ts"],"sourcesContent":["export var ItemTypeEnum;\n(function (ItemTypeEnum) {\n    ItemTypeEnum[\"IMAGE\"] = \"image\";\n    ItemTypeEnum[\"AUDIO\"] = \"audio\";\n    ItemTypeEnum[\"VIDEO\"] = \"video\";\n})(ItemTypeEnum || (ItemTypeEnum = {}));\n","import { ItemTypeEnum } from '../types/media-in-tabs.type';\nexport var ThemeType;\n(function (ThemeType) {\n    ThemeType[\"LIGHT\"] = \"light\";\n    ThemeType[\"DARK\"] = \"dark\";\n    ThemeType[\"SYSTEM\"] = \"system\";\n})(ThemeType || (ThemeType = {}));\nexport var DefaultActionType;\n(function (DefaultActionType) {\n    DefaultActionType[\"POPUP\"] = \"popup\";\n    DefaultActionType[\"SIDE_PANEL\"] = \"side-panel\";\n})(DefaultActionType || (DefaultActionType = {}));\nexport const DEFAULT_SETTINGS = {\n    theme: ThemeType.SYSTEM,\n    defaultAction: DefaultActionType.POPUP,\n    previousVersion: null,\n    showChangelogLink: false,\n    lastOpenSection: ItemTypeEnum.IMAGE,\n    filters: {},\n    filtersOpen: false,\n};\nexport const DEFAULT_SETTINGS_KEYS = Object.keys(DEFAULT_SETTINGS);\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport function executeContentScript(scriptUrl_1) {\n    return __awaiter(this, arguments, void 0, function* (scriptUrl, tabId = null) {\n        if (!tabId) {\n            const tab = yield getCurrentTab();\n            if (!tab || !tab.id) {\n                return;\n            }\n            if (tab.id <= 0) {\n                return;\n            }\n            tabId = tab.id;\n        }\n        yield chrome.scripting.executeScript({\n            target: { tabId, allFrames: true },\n            files: [scriptUrl],\n        });\n    });\n}\nexport function getCurrentTab() {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        try {\n            let queryOptions = { active: true, lastFocusedWindow: true };\n            let [tab] = yield chrome.tabs.query(queryOptions);\n            if (!(tab === null || tab === void 0 ? void 0 : tab.url) || ((_a = tab === null || tab === void 0 ? void 0 : tab.url) === null || _a === void 0 ? void 0 : _a.startsWith('chrome://')) || ((_b = tab === null || tab === void 0 ? void 0 : tab.url) === null || _b === void 0 ? void 0 : _b.startsWith('https://chromewebstore.google.com'))) {\n                return null;\n            }\n            return tab;\n        }\n        catch (_c) {\n            return null;\n        }\n    });\n}\nexport function getTab(tabId) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        try {\n            const tab = yield chrome.tabs.get(tabId);\n            if (chrome.runtime.lastError) {\n                console.error('Error get tab by ID:', chrome.runtime.lastError);\n                return null;\n            }\n            if (!(tab === null || tab === void 0 ? void 0 : tab.url) || ((_a = tab === null || tab === void 0 ? void 0 : tab.url) === null || _a === void 0 ? void 0 : _a.startsWith('chrome://')) || ((_b = tab === null || tab === void 0 ? void 0 : tab.url) === null || _b === void 0 ? void 0 : _b.startsWith('https://chromewebstore.google.com'))) {\n                return null;\n            }\n            return tab;\n        }\n        catch (_c) {\n            return null;\n        }\n    });\n}\nexport function downloadUrl(url, filename = null) {\n    const downloadOptions = { url };\n    if (filename) {\n        downloadOptions.filename = filename;\n    }\n    chrome.downloads.download(downloadOptions);\n}\nexport function getStorageValue(obj, callback) {\n    chrome.storage.sync.get(obj, callback);\n}\nexport function setStorageValue(obj, callback) {\n    if (callback) {\n        chrome.storage.sync.set(obj, callback);\n    }\n    else {\n        chrome.storage.sync.set(obj);\n    }\n}\nexport function sendMessage(eventName, data = null, callback) {\n    if (!callback) {\n        callback = (response) => {\n        };\n    }\n    try {\n        chrome.runtime.sendMessage({ eventName, data }, callback);\n    }\n    catch (_a) {\n        // do nothing\n    }\n}\nexport function onMessage(callback) {\n    chrome.runtime.onMessage.addListener(callback);\n}\nexport function createTab(details) {\n    chrome.tabs.create(details);\n}\nexport function setPopupOptions(options) {\n    chrome.action.setPopup(options);\n}\nexport function setSidePanelOptions(options) {\n    chrome.sidePanel.setOptions(options);\n}\nexport function setSidePanelBehavior(options) {\n    chrome.sidePanel.setPanelBehavior(options).catch((error) => console.log(error));\n}\nexport function contextMenuClicked(callback) {\n    chrome.contextMenus.onClicked.addListener((info, tab) => {\n        if (!tab) {\n            return;\n        }\n        callback(info, tab);\n    });\n}\nexport function onInstalled(callback) {\n    chrome.runtime.onInstalled.addListener(callback);\n}\nexport function createContextMenu(properties) {\n    chrome.contextMenus.create(properties);\n}\nexport function onCreateTab(callback) {\n    chrome.tabs.onCreated.addListener(callback);\n}\nexport function onReplaceTab(callback) {\n    chrome.tabs.onReplaced.addListener(callback);\n}\nexport function onActivateTab(callback) {\n    chrome.tabs.onActivated.addListener(callback);\n}\nexport function onUpdateTab(callback) {\n    chrome.tabs.onUpdated.addListener(callback);\n}\nexport function onClickExtensionIcon(callback) {\n    chrome.action.onClicked.addListener(callback);\n}\nexport function openPopup(options) {\n    chrome.action.openPopup(options);\n}\nexport function openSidePanel(options) {\n    chrome.sidePanel.open(options);\n}\nexport function getVersion() {\n    return chrome.runtime.getManifest().version;\n}\n","export var MessageEventNameEnum;\n(function (MessageEventNameEnum) {\n    MessageEventNameEnum[\"TAB_CREATED\"] = \"tabCreated\";\n    MessageEventNameEnum[\"TAB_REPLACED\"] = \"tabReplaced\";\n    MessageEventNameEnum[\"TAB_UPDATED\"] = \"tabUpdated\";\n    MessageEventNameEnum[\"TAB_ACTIVATED\"] = \"tabActivated\";\n    MessageEventNameEnum[\"SEND_MEDIA\"] = \"sendMedia\";\n    MessageEventNameEnum[\"QUICK_SEND_MEDIA_FOR_DOWNLOAD\"] = \"quickSendMediaForDownload\";\n    MessageEventNameEnum[\"GET_TAB_INFO\"] = \"getTabInfo\";\n    MessageEventNameEnum[\"THEME_CHANGED\"] = \"themeChanged\";\n})(MessageEventNameEnum || (MessageEventNameEnum = {}));\n","import { ItemTypeEnum } from '../types/media-in-tabs.type';\nimport { getStorageValue } from '../utils/chrome-api';\nimport { DEFAULT_SETTINGS, DefaultActionType, ThemeType } from './storage-def';\nexport function getStorageDefaultActionValue(callback) {\n    getStorageValue({ defaultAction: DefaultActionType.POPUP }, ({ defaultAction }) => {\n        if (!defaultAction) {\n            defaultAction = DEFAULT_SETTINGS.defaultAction;\n        }\n        callback(defaultAction);\n    });\n}\nexport function getStorageThemeValue(callback) {\n    getStorageValue({ theme: ThemeType.SYSTEM }, ({ theme }) => {\n        if (!theme) {\n            theme = DEFAULT_SETTINGS.theme;\n        }\n        callback(theme);\n    });\n}\nexport function getStoragePreviousVersionValue(callback) {\n    getStorageValue({ previousVersion: null }, ({ previousVersion }) => {\n        if (!previousVersion) {\n            previousVersion = DEFAULT_SETTINGS.previousVersion;\n        }\n        callback(previousVersion);\n    });\n}\nexport function getShowChangeLogLinkValue(callback) {\n    getStorageValue({ showChangelogLink: false }, ({ showChangelogLink }) => {\n        callback(!!showChangelogLink);\n    });\n}\nexport function getLastOpenSectionValue(callback) {\n    getStorageValue({ lastOpenSection: ItemTypeEnum.IMAGE }, ({ lastOpenSection }) => {\n        if (!lastOpenSection) {\n            lastOpenSection = DEFAULT_SETTINGS.lastOpenSection;\n        }\n        callback(lastOpenSection);\n    });\n}\nexport function getFiltersValue(callback) {\n    getStorageValue({ filters: {} }, ({ filters }) => {\n        if (!filters) {\n            filters = DEFAULT_SETTINGS.filters;\n        }\n        callback(filters);\n    });\n}\nexport function getFiltersOpenValue(callback) {\n    getStorageValue({ filtersOpen: false }, ({ filtersOpen }) => {\n        callback(!!filtersOpen);\n    });\n}\n","// Apply the saved theme or system theme when the extension loads\nimport { ThemeType } from './storage/storage-def';\nimport { getStorageThemeValue } from './storage/storage-fn';\nimport { MessageEventNameEnum } from './types/message-event-name.enum';\nimport { onMessage } from './utils/chrome-api';\ngetStorageThemeValue(applyTheme);\nonMessage((msg) => {\n    if (msg.eventName === MessageEventNameEnum.THEME_CHANGED) {\n        applyTheme(msg.data.theme);\n    }\n});\nfunction getBrowserTheme() {\n    const isDarkMode = window.matchMedia('(prefers-color-scheme: dark)').matches;\n    return isDarkMode ? ThemeType.DARK : ThemeType.LIGHT;\n}\nfunction applyTheme(theme) {\n    document.body.classList.remove('light-theme', 'dark-theme');\n    if (theme === ThemeType.LIGHT) {\n        document.body.classList.add('light-theme');\n    }\n    else if (theme === ThemeType.DARK) {\n        document.body.classList.add('dark-theme');\n    }\n    else if (theme === ThemeType.SYSTEM) {\n        const systemTheme = getBrowserTheme();\n        document.body.classList.add(`${systemTheme}-theme`);\n    }\n}\n"],"names":["ThemeType","DefaultActionType","ItemTypeEnum","theme","SYSTEM","defaultAction","POPUP","previousVersion","showChangelogLink","lastOpenSection","IMAGE","filters","filtersOpen","MessageEventNameEnum","callback","applyTheme","document","body","classList","remove","LIGHT","add","DARK","systemTheme","window","matchMedia","matches","Object","keys","obj","chrome","storage","sync","get","runtime","onMessage","addListener","msg","eventName","THEME_CHANGED","data"],"sourceRoot":""}